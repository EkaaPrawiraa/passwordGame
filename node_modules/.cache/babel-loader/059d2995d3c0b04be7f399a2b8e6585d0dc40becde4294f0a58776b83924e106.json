{"ast":null,"code":"var _jsxFileName = \"/Users/ekaaprawira/Documents/github/IRK/passwordsgame/src/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport passwordRules from '../rules';\nimport Rule from '../component/RuleUI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicTextFields() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [rulesChecker, setRulesChecker] = useState(Array(20).fill(0));\n  const X = 10;\n  let rulesCounter = 0;\n  const [rulesComponents, setRulesComponents] = useState([]);\n  const [forbiddenLetters, setForbiddenLetters] = useState(['a', 'e', 'i', 'o', 'u']);\n  const [open, setOpen] = useState(false);\n  const [inputLetters, setInputLetters] = useState('');\n  const handleSearch = e => {\n    const inputValue = e.target.value;\n    if (inputValue.toLowerCase().includes('cheat')) {\n      setSearchTerm(passwordRules.cheatPassword());\n    } else {\n      setSearchTerm(inputValue);\n    }\n  };\n  const checkRules = words => {\n    const newRulesComponents = [];\n    if (true) {\n      if (passwordRules.rule1(words)) {\n        console.log('Rule 1 passed: Length greater than 5');\n        rulesChecker[0] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 1,\n          text: \"Your password must be at least 5 characters.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 1 failed: Length not greater than 5');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 1,\n          text: \"Your password must be at least 5 characters.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[0] == 1) {\n      if (passwordRules.rule2(words)) {\n        console.log('Rule 2 passed: Contains at least one digit');\n        rulesChecker[1] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 2,\n          text: \"Your password must include a number.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 2 failed: Does not contain any digit');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 2,\n          text: \"Your password must include a number.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[1] == 1) {\n      if (passwordRules.rule3(words)) {\n        console.log('Rule 3 passed: Contains at least one uppercase letter');\n        rulesChecker[2] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 3,\n          text: \"Your password must include an uppercase letter.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 3 failed: Does not contain any uppercase letter');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 3,\n          text: \"Your password must include an uppercase letter.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[2] == 1) {\n      if (passwordRules.rule4(words)) {\n        console.log('Rule 4 passed: Contains non-alphanumeric characters');\n        rulesChecker[3] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 4,\n          text: \"Your password must include a non-alphanumeric character.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 4 failed: Does not contain non-alphanumeric characters');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 4,\n          text: \"Your password must include a non-alphanumeric character.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[3] == 1) {\n      if (passwordRules.rule5(words, X)) {\n        console.log(`Rule 5 passed: Sum of digits equals ${X}`);\n        rulesChecker[4] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 5,\n          text: `Sum of digits must equal ${X}`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log(`Rule 5 failed: Sum of digits does not equal ${X}`);\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 5,\n          text: `Sum of digits must equal ${X}`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[4] == 1) {\n      if (passwordRules.rule6(words)) {\n        console.log('Rule 6 passed: Contains month names');\n        rulesChecker[5] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 6,\n          text: \"Your password must include a month name.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 6 failed: Does not contain month names');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 6,\n          text: \"Your password must include a month name.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[5] == 1) {\n      if (passwordRules.rule7(words)) {\n        console.log('Rule 7 passed: Contains Roman numerals');\n        rulesChecker[6] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 7,\n          text: \"Your password must include a Roman numeral.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 7 failed: Does not contain Roman numerals');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 7,\n          text: \"Your password must include a Roman numeral.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[6] == 1) {\n      if (passwordRules.rule8(words, passwordRules.countries)) {\n        console.log('Rule 8 passed: Contains country names');\n        rulesChecker[7] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 8,\n          text: \"Your password must include a country name.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 8 failed: Does not contain country names');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 8,\n          text: \"Your password must include a country name.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[7] == 1) {\n      if (passwordRules.rule9(words, X)) {\n        console.log(`Rule 9 passed: Product of Roman numerals equals ${X}`);\n        rulesChecker[8] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 9,\n          text: `Product of Roman numerals must equal ${X}`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log(`Rule 9 failed: Product of Roman numerals does not equal ${X}`);\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 9,\n          text: `Product of Roman numerals must equal ${X}`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[8] == 1) {\n      const X10 = 10000;\n      rulesChecker[9] = 1;\n      newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n        index: 10,\n        text: `Password must satisfy rule 10`,\n        passed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }, this));\n    }\n    if (rulesChecker[9] == 1) {\n      rulesChecker[10] = 1;\n      newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n        index: 11,\n        text: \"Password must satisfy rule 11\",\n        passed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }, this));\n    }\n    if (rulesChecker[10] == 1) {\n      const captcha = passwordRules.captchas[0];\n      if (passwordRules.rule12(words, captcha)) {\n        console.log('Rule 12 passed: Contains captcha');\n        rulesChecker[11] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 12,\n          text: \"Your password must include the captcha.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 12 failed: Does not contain captcha');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 12,\n          text: \"Your password must include the captcha.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[11] == 1) {\n      if (passwordRules.rule13(words)) {\n        console.log('Rule 13 passed: Contains leap year');\n        rulesChecker[12] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 13,\n          text: \"Your password must include a leap year.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 13 failed: Does not contain leap year');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 13,\n          text: \"Your password must include a leap year.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[12] == 1) {\n      rulesChecker[13] = 1;\n      newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n        index: 14,\n        text: \"Password must satisfy rule 14\",\n        passed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }, this));\n    }\n    if (rulesChecker[13] == 1) {\n      if (passwordRules.rule15(words, forbiddenLetters)) {\n        console.log('Rule 15 passed: Does not contain forbidden letters');\n        rulesChecker[14] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 15,\n          text: \"Your password must not contain forbidden letters.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 15 failed: Contains forbidden letters');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 15,\n          text: \"Your password must not contain forbidden letters.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[14] == 1) {\n      if (passwordRules.rule16(words)) {\n        console.log('Rule 16 passed: Contains IRK-related phrases');\n        rulesChecker[15] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 16,\n          text: \"Your password must include IRK-related phrases.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 16 failed: Does not contain IRK-related phrases');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 16,\n          text: \"Your password must include IRK-related phrases.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[15] == 1) {\n      const X17 = 20;\n      if (passwordRules.rule17(words, X17)) {\n        console.log(`Rule 17 passed: Percentage of digits is at least ${X17}%`);\n        rulesChecker[16] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 17,\n          text: `Percentage of digits must be at least ${X17}%`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log(`Rule 17 failed: Percentage of digits is less than ${X17}%`);\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 17,\n          text: `Percentage of digits must be at least ${X17}%`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[16] == 1) {\n      if (passwordRules.rule18(words)) {\n        console.log('Rule 18 passed: Contains length of text');\n        rulesChecker[17] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 18,\n          text: \"Your password must include the length of the text.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 18 failed: Does not contain length of text');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 18,\n          text: \"Your password must include the length of the text.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[17] == 1) {\n      if (passwordRules.rule19(words)) {\n        console.log('Rule 19 passed: Length of text is a prime number');\n        rulesChecker[18] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 19,\n          text: \"Your password's length must be a prime number.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Rule 19 failed: Length of text is not a prime number');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 19,\n          text: \"Your password's length must be a prime number.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    if (rulesChecker[18] == 1) {\n      const currentTime = new Date();\n      if (passwordRules.containsCurrentTime(words, currentTime)) {\n        console.log('Your password must include the current time.');\n        rulesChecker[19] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 20,\n          text: \"Your password must include the current time.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 41\n        }, this));\n      } else {\n        console.log('Does not contain current time in text');\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 20,\n          text: \"Your password must include the current time.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 41\n        }, this));\n      }\n    }\n    setRulesComponents(newRulesComponents);\n  };\n  useEffect(() => {\n    checkRules(searchTerm);\n    console.log(searchTerm);\n    console.log();\n  }, [searchTerm, forbiddenLetters]);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleInputChange = e => setInputLetters(e.target.value);\n  const handleSave = () => {\n    setForbiddenLetters(inputLetters.split(',').map(letter => letter.trim()));\n    handleClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      '& > :not(style)': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"PASSWORDS\",\n      variant: \"standard\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      children: \"Set Forbidden Letters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          border: '2px solid #000',\n          boxShadow: 24,\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set Forbidden Letters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Forbidden Letters (comma separated)\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: inputLetters,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), rulesComponents]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n}\n_s(BasicTextFields, \"nRBw+5NB8ueD4o10n6X10oL6t3Q=\");\n_c = BasicTextFields;\nvar _c;\n$RefreshReg$(_c, \"BasicTextFields\");","map":{"version":3,"names":["React","useEffect","useState","Box","TextField","Button","Modal","passwordRules","Rule","jsxDEV","_jsxDEV","BasicTextFields","_s","searchTerm","setSearchTerm","gameOver","setGameOver","rulesChecker","setRulesChecker","Array","fill","X","rulesCounter","rulesComponents","setRulesComponents","forbiddenLetters","setForbiddenLetters","open","setOpen","inputLetters","setInputLetters","handleSearch","e","inputValue","target","value","toLowerCase","includes","cheatPassword","checkRules","words","newRulesComponents","rule1","console","log","push","index","text","passed","fileName","_jsxFileName","lineNumber","columnNumber","rule2","rule3","rule4","rule5","rule6","rule7","rule8","countries","rule9","X10","captcha","captchas","rule12","rule13","rule15","rule16","X17","rule17","rule18","rule19","currentTime","Date","containsCurrentTime","handleOpen","handleClose","handleInputChange","handleSave","split","map","letter","trim","component","sx","m","width","noValidate","autoComplete","children","id","label","variant","onChange","onClick","onClose","position","top","left","transform","bgcolor","border","boxShadow","p","fullWidth","_c","$RefreshReg$"],"sources":["/Users/ekaaprawira/Documents/github/IRK/passwordsgame/src/pages/Profile.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport passwordRules from '../rules';\nimport Rule from '../component/RuleUI';\n\nexport default function BasicTextFields() {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [gameOver, setGameOver] = useState(false);\n    const [rulesChecker, setRulesChecker] = useState(Array(20).fill(0));\n    const X = 10;\n    let rulesCounter=0;\n    const [rulesComponents, setRulesComponents] = useState([]);\n    const [forbiddenLetters, setForbiddenLetters] = useState(['a', 'e', 'i', 'o', 'u']);\n    const [open, setOpen] = useState(false);\n    const [inputLetters, setInputLetters] = useState('');\n\n    \n\n    \n\n    const handleSearch = (e) => {\n        const inputValue = e.target.value;\n        if (inputValue.toLowerCase().includes('cheat')) {\n            setSearchTerm(passwordRules.cheatPassword());\n        } else {\n            setSearchTerm(inputValue);\n        }\n    }\n    \n    const checkRules = (words) => {\n        const newRulesComponents = [];\n    \n        if (true) {\n            if (passwordRules.rule1(words)) {\n                console.log('Rule 1 passed: Length greater than 5');\n                rulesChecker[0] = 1;\n                newRulesComponents.push(<Rule index={1} text=\"Your password must be at least 5 characters.\" passed={true} />);\n            } else {\n                console.log('Rule 1 failed: Length not greater than 5');\n                newRulesComponents.push(<Rule index={1} text=\"Your password must be at least 5 characters.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[0] == 1) {\n            if (passwordRules.rule2(words)) {\n                console.log('Rule 2 passed: Contains at least one digit');\n                rulesChecker[1] = 1;\n                newRulesComponents.push(<Rule index={2} text=\"Your password must include a number.\" passed={true} />);\n            } else {\n                console.log('Rule 2 failed: Does not contain any digit');\n                newRulesComponents.push(<Rule index={2} text=\"Your password must include a number.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[1] == 1) {\n            if (passwordRules.rule3(words)) {\n                console.log('Rule 3 passed: Contains at least one uppercase letter');\n                rulesChecker[2] = 1;\n                newRulesComponents.push(<Rule index={3} text=\"Your password must include an uppercase letter.\" passed={true} />);\n            } else {\n                console.log('Rule 3 failed: Does not contain any uppercase letter');\n                newRulesComponents.push(<Rule index={3} text=\"Your password must include an uppercase letter.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[2] == 1) {\n            if (passwordRules.rule4(words)) {\n                console.log('Rule 4 passed: Contains non-alphanumeric characters');\n                rulesChecker[3] = 1;\n                newRulesComponents.push(<Rule index={4} text=\"Your password must include a non-alphanumeric character.\" passed={true} />);\n            } else {\n                console.log('Rule 4 failed: Does not contain non-alphanumeric characters');\n                newRulesComponents.push(<Rule index={4} text=\"Your password must include a non-alphanumeric character.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[3] == 1) {\n            if (passwordRules.rule5(words, X)) {\n                console.log(`Rule 5 passed: Sum of digits equals ${X}`);\n                rulesChecker[4] = 1;\n                newRulesComponents.push(<Rule index={5} text={`Sum of digits must equal ${X}`} passed={true} />);\n            } else {\n                console.log(`Rule 5 failed: Sum of digits does not equal ${X}`);\n                newRulesComponents.push(<Rule index={5} text={`Sum of digits must equal ${X}`} passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[4] == 1) {\n            if (passwordRules.rule6(words)) {\n                console.log('Rule 6 passed: Contains month names');\n                rulesChecker[5] = 1;\n                newRulesComponents.push(<Rule index={6} text=\"Your password must include a month name.\" passed={true} />);\n            } else {\n                console.log('Rule 6 failed: Does not contain month names');\n                newRulesComponents.push(<Rule index={6} text=\"Your password must include a month name.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[5] == 1) {\n            if (passwordRules.rule7(words)) {\n                console.log('Rule 7 passed: Contains Roman numerals');\n                rulesChecker[6] = 1;\n                newRulesComponents.push(<Rule index={7} text=\"Your password must include a Roman numeral.\" passed={true} />);\n            } else {\n                console.log('Rule 7 failed: Does not contain Roman numerals');\n                newRulesComponents.push(<Rule index={7} text=\"Your password must include a Roman numeral.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[6] == 1) {\n            if (passwordRules.rule8(words, passwordRules.countries)) {\n                console.log('Rule 8 passed: Contains country names');\n                rulesChecker[7] = 1;\n                newRulesComponents.push(<Rule index={8} text=\"Your password must include a country name.\" passed={true} />);\n            } else {\n                console.log('Rule 8 failed: Does not contain country names');\n                newRulesComponents.push(<Rule index={8} text=\"Your password must include a country name.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[7] == 1) {\n            if (passwordRules.rule9(words, X)) {\n                console.log(`Rule 9 passed: Product of Roman numerals equals ${X}`);\n                rulesChecker[8] = 1;\n                newRulesComponents.push(<Rule index={9} text={`Product of Roman numerals must equal ${X}`} passed={true} />);\n            } else {\n                console.log(`Rule 9 failed: Product of Roman numerals does not equal ${X}`);\n                newRulesComponents.push(<Rule index={9} text={`Product of Roman numerals must equal ${X}`} passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[8] == 1) {\n            const X10 = 10000;\n            rulesChecker[9] = 1;\n            newRulesComponents.push(<Rule index={10} text={`Password must satisfy rule 10`} passed={true} />);\n        }\n    \n        if (rulesChecker[9] == 1) {\n            rulesChecker[10] = 1;\n            newRulesComponents.push(<Rule index={11} text=\"Password must satisfy rule 11\" passed={true} />);\n        }\n    \n        if (rulesChecker[10] == 1) {\n            const captcha = passwordRules.captchas[0];\n            if (passwordRules.rule12(words, captcha)) {\n                console.log('Rule 12 passed: Contains captcha');\n                rulesChecker[11] = 1;\n                newRulesComponents.push(<Rule index={12} text=\"Your password must include the captcha.\" passed={true} />);\n            } else {\n                console.log('Rule 12 failed: Does not contain captcha');\n                newRulesComponents.push(<Rule index={12} text=\"Your password must include the captcha.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[11] == 1) {\n            if (passwordRules.rule13(words)) {\n                console.log('Rule 13 passed: Contains leap year');\n                rulesChecker[12] = 1;\n                newRulesComponents.push(<Rule index={13} text=\"Your password must include a leap year.\" passed={true} />);\n            } else {\n                console.log('Rule 13 failed: Does not contain leap year');\n                newRulesComponents.push(<Rule index={13} text=\"Your password must include a leap year.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[12] == 1) {\n            rulesChecker[13] = 1;\n            newRulesComponents.push(<Rule index={14} text=\"Password must satisfy rule 14\" passed={true} />);\n        }\n    \n        if (rulesChecker[13] == 1) {\n            if (passwordRules.rule15(words, forbiddenLetters)) {\n                console.log('Rule 15 passed: Does not contain forbidden letters');\n                rulesChecker[14] = 1;\n                newRulesComponents.push(<Rule index={15} text=\"Your password must not contain forbidden letters.\" passed={true} />);\n            } else {\n                console.log('Rule 15 failed: Contains forbidden letters');\n                newRulesComponents.push(<Rule index={15} text=\"Your password must not contain forbidden letters.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[14] == 1) {\n            if (passwordRules.rule16(words)) {\n                console.log('Rule 16 passed: Contains IRK-related phrases');\n                rulesChecker[15] = 1;\n                newRulesComponents.push(<Rule index={16} text=\"Your password must include IRK-related phrases.\" passed={true} />);\n            } else {\n                console.log('Rule 16 failed: Does not contain IRK-related phrases');\n                newRulesComponents.push(<Rule index={16} text=\"Your password must include IRK-related phrases.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[15] == 1) {\n            const X17 = 20;\n            if (passwordRules.rule17(words, X17)) {\n                console.log(`Rule 17 passed: Percentage of digits is at least ${X17}%`);\n                rulesChecker[16] = 1;\n                newRulesComponents.push(<Rule index={17} text={`Percentage of digits must be at least ${X17}%`} passed={true} />);\n            } else {\n                console.log(`Rule 17 failed: Percentage of digits is less than ${X17}%`);\n                newRulesComponents.push(<Rule index={17} text={`Percentage of digits must be at least ${X17}%`} passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[16] == 1) {\n            if (passwordRules.rule18(words)) {\n                console.log('Rule 18 passed: Contains length of text');\n                rulesChecker[17] = 1;\n                newRulesComponents.push(<Rule index={18} text=\"Your password must include the length of the text.\" passed={true} />);\n            } else {\n                console.log('Rule 18 failed: Does not contain length of text');\n                newRulesComponents.push(<Rule index={18} text=\"Your password must include the length of the text.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[17] == 1) {\n            if (passwordRules.rule19(words)) {\n                console.log('Rule 19 passed: Length of text is a prime number');\n                rulesChecker[18] = 1;\n                newRulesComponents.push(<Rule index={19} text=\"Your password's length must be a prime number.\" passed={true} />);\n            } else {\n                console.log('Rule 19 failed: Length of text is not a prime number');\n                newRulesComponents.push(<Rule index={19} text=\"Your password's length must be a prime number.\" passed={false} />);\n            }\n        }\n    \n        if (rulesChecker[18] == 1) {\n            const currentTime = new Date();\n            if (passwordRules.containsCurrentTime(words, currentTime)) {\n                console.log('Your password must include the current time.');\n                rulesChecker[19] = 1;\n                newRulesComponents.push(<Rule index={20} text=\"Your password must include the current time.\" passed={true} />);\n            } else {\n                console.log('Does not contain current time in text');\n                newRulesComponents.push(<Rule index={20} text=\"Your password must include the current time.\" passed={false} />);\n            }\n        }\n        setRulesComponents(newRulesComponents);\n    };\n    \n    \n\n    useEffect(() => {\n        checkRules(searchTerm);\n        console.log(searchTerm);\n        console.log()\n    }, [searchTerm, forbiddenLetters]);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const handleInputChange = (e) => setInputLetters(e.target.value);\n    const handleSave = () => {\n        setForbiddenLetters(inputLetters.split(',').map(letter => letter.trim()));\n        handleClose();\n    };\n  return (\n        <Box component=\"form\" sx={{ '& > :not(style)': { m: 1, width: '25ch' }, }} noValidate autoComplete=\"off\">\n            <TextField id=\"standard-basic\" label=\"PASSWORDS\" variant=\"standard\" value={searchTerm} onChange={handleSearch} />\n            <Button onClick={handleOpen}>Set Forbidden Letters</Button>\n            <Modal open={open} onClose={handleClose}>\n                <Box sx={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', width: 400, bgcolor: 'background.paper', border: '2px solid #000', boxShadow: 24, p: 4 }}>\n                    <h2>Set Forbidden Letters</h2>\n                    <TextField label=\"Forbidden Letters (comma separated)\" variant=\"outlined\" fullWidth value={inputLetters} onChange={handleInputChange} />\n                    <Button onClick={handleSave}>Save</Button>\n                </Box>\n            </Modal>\n            {rulesComponents}\n        </Box>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}