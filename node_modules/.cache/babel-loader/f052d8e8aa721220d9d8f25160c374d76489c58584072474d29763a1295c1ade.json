{"ast":null,"code":"var _jsxFileName = \"/Users/ekaaprawira/Documents/github/IRK/passwordsgame/passwordGame/src/pages/Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport passwordRules from '../rules';\nimport Rule from '../component/RuleUI';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextBox() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [rulesChecker, setRulesChecker] = useState(Array(20).fill(0));\n  const X = 10;\n  const [rulesComponents, setRulesComponents] = useState([]);\n  const countries = ['indonesia', 'united states', 'france', 'germany', 'japan', 'brazil', 'australia', 'russia', 'canada', 'italy'];\n  const captchas = ['captcha1', 'captcha2', 'captcha3', 'captcha4', 'captcha5', 'captcha6', 'captcha7'];\n  const captcha = captchas[0];\n  const handleSearch = e => {\n    const inputValue = e.target.value;\n    if (inputValue.toLowerCase().includes('cheat')) {\n      setSearchTerm(passwordRules.cheatPassword());\n    } else {\n      setSearchTerm(inputValue);\n    }\n  };\n  const checkRules = words => {\n    const newRulesComponents = [];\n    let allPassed = true;\n    if (true) {\n      if (passwordRules.rule1(words)) {\n        rulesChecker[0] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 1,\n          text: \"Your password must be at least 5 characters.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 1,\n          text: \"Your password must be at least 5 characters.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[0] == 1) {\n      if (passwordRules.rule2(words)) {\n        rulesChecker[1] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 2,\n          text: \"Your password must include a number.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 2,\n          text: \"Your password must include a number.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[1] == 1) {\n      if (passwordRules.rule3(words)) {\n        rulesChecker[2] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 3,\n          text: \"Your password must include an uppercase letter.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 3,\n          text: \"Your password must include an uppercase letter.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[2] == 1) {\n      if (passwordRules.rule4(words)) {\n        rulesChecker[3] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 4,\n          text: \"Your password must include a non-alphanumeric character.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 4,\n          text: \"Your password must include a non-alphanumeric character.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[3] == 1) {\n      if (passwordRules.rule5(words, X)) {\n        rulesChecker[4] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 5,\n          text: `Sum of digits must equal ${X}`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 5,\n          text: `Sum of digits must equal ${X}`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[4] == 1) {\n      if (passwordRules.rule6(words)) {\n        rulesChecker[5] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 6,\n          text: \"Your password must include a month name.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 6,\n          text: \"Your password must include a month name.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[5] == 1) {\n      if (passwordRules.rule7(words)) {\n        rulesChecker[6] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 7,\n          text: \"Your password must include a Roman numeral.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 7,\n          text: \"Your password must include a Roman numeral.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[6] == 1) {\n      if (passwordRules.rule8(words, countries)) {\n        rulesChecker[7] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 8,\n          text: \"Your password must include a country name.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 8,\n          text: \"Your password must include a country name.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[7] == 1) {\n      if (passwordRules.rule9(words, X)) {\n        rulesChecker[8] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 9,\n          text: `Product of Roman numerals must equal ${X}`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 9,\n          text: `Product of Roman numerals must equal ${X}`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[8] == 1) {\n      rulesChecker[9] = 1;\n      if (words.includes('ðŸ”¥')) {\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 10,\n          text: `Oh no! Your password is on fire ðŸ”¥. Quick, put it out!`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 10,\n          text: `Oh no! Your password is on fire ðŸ”¥. Quick, put it out!`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[9] == 1) {\n      rulesChecker[10] = 1;\n      newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n        index: 11,\n        text: \"\\uD83E\\uDD5A This is my chicken Paul. He hasn\\u2019t hatched yet. Please put him in your password and keep him safe\",\n        passed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }, this));\n      //allpased\n    }\n    if (rulesChecker[10] == 1) {\n      if (passwordRules.rule12(words, captcha)) {\n        rulesChecker[11] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 12,\n          text: \"Your password must include the captcha.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 12,\n          text: \"Your password must include the captcha.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[11] == 1) {\n      if (passwordRules.rule13(words)) {\n        rulesChecker[12] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 13,\n          text: \"Your password must include a leap year.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 13,\n          text: \"Your password must include a leap year.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[12] == 1) {\n      rulesChecker[13] = 1;\n      newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n        index: 14,\n        text: \"Password must satisfy rule 14\",\n        passed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }, this));\n      //allpases\n    }\n    if (rulesChecker[13] == 1) {\n      const forbiddenLetters = [''];\n      if (passwordRules.rule15(words, forbiddenLetters)) {\n        rulesChecker[14] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 15,\n          text: \"Your password must not contain forbidden letters.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 15,\n          text: \"Your password must not contain forbidden letters.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[14] == 1) {\n      if (passwordRules.rule16(words)) {\n        rulesChecker[15] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 16,\n          text: \"Your password must include IRK-related phrases.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 16,\n          text: \"Your password must include IRK-related phrases.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[15] == 1) {\n      const X17 = 20;\n      if (passwordRules.rule17(words, X17)) {\n        rulesChecker[16] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 17,\n          text: `Percentage of digits must be at least ${X17}%`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 17,\n          text: `Percentage of digits must be at least ${X17}%`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[16] == 1) {\n      if (passwordRules.rule18(words)) {\n        rulesChecker[17] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 18,\n          text: \"Your password must include the length of the text.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 18,\n          text: \"Your password must include the length of the text.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[17] == 1) {\n      if (passwordRules.rule19(words)) {\n        rulesChecker[18] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 19,\n          text: \"Your password's length must be a prime number.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 19,\n          text: \"Your password's length must be a prime number.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[18] == 1) {\n      const currentTime = new Date();\n      if (passwordRules.rule20(words, currentTime)) {\n        rulesChecker[19] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 20,\n          text: \"Your password must include the current time.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 20,\n          text: \"Your password must include the current time.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[19] == 1 && allPassed) {\n      console.log(\"win\");\n    }\n    setRulesComponents(newRulesComponents);\n  };\n  useEffect(() => {\n    checkRules(searchTerm);\n    console.log(searchTerm);\n    console.log();\n  }, [searchTerm]);\n  useEffect(() => {\n    if (rulesChecker[8] === 1) {\n      const intervalId = setInterval(() => {\n        setSearchTerm(passwordRules.rule10);\n      }, 5000);\n      return () => clearInterval(intervalId);\n    }\n  }, [rulesChecker, passwordRules.rule10, searchTerm]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      paddingTop: '45px',\n      height: '100vh',\n      backgroundColor: '#fdf4e3',\n      // Ganti warna background di sini\n      '& > :not(style)': {\n        m: 1,\n        width: '50%%'\n      } // Mengatur lebar TextField dan Rule components\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"img\",\n      src: \"https://neal.fun/password-game/title.svg\",\n      alt: \"Title\",\n      sx: {\n        width: '100%',\n        maxWidth: '500px',\n        marginBottom: '20px',\n        paddingBottom: '60px',\n        paddingTop: '60px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        textAlign: 'left',\n        marginTop: '20px'\n      },\n      children: \"Please choose a password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '33%' // Mengatur lebar Box yang mengandung TextField dan Typography\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        variant: \"outlined\",\n        value: searchTerm,\n        onChange: handleSearch,\n        sx: {\n          borderRadius: '15px',\n          backgroundColor: '#fff',\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderRadius: '15px',\n              borderColor: 'black'\n            }\n          },\n          width: '100%' // Mengatur lebar TextField\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          paddingLeft: 1\n        },\n        children: searchTerm.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), rulesComponents]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this);\n}\n_s(TextBox, \"FxWqfp9alAAArAA7Ri0zxGji4CY=\");\n_c = TextBox;\nvar _c;\n$RefreshReg$(_c, \"TextBox\");","map":{"version":3,"names":["React","useEffect","useState","Box","TextField","passwordRules","Rule","Typography","jsxDEV","_jsxDEV","TextBox","_s","searchTerm","setSearchTerm","gameOver","setGameOver","rulesChecker","setRulesChecker","Array","fill","X","rulesComponents","setRulesComponents","countries","captchas","captcha","handleSearch","e","inputValue","target","value","toLowerCase","includes","cheatPassword","checkRules","words","newRulesComponents","allPassed","rule1","push","index","text","passed","fileName","_jsxFileName","lineNumber","columnNumber","unshift","rule2","rule3","rule4","rule5","rule6","rule7","rule8","rule9","rule12","rule13","forbiddenLetters","rule15","rule16","X17","rule17","rule18","rule19","currentTime","Date","rule20","console","log","intervalId","setInterval","rule10","clearInterval","component","sx","display","flexDirection","alignItems","paddingTop","height","backgroundColor","m","width","noValidate","autoComplete","children","src","alt","maxWidth","marginBottom","paddingBottom","variant","gutterBottom","textAlign","marginTop","id","onChange","borderRadius","borderColor","paddingLeft","length","_c","$RefreshReg$"],"sources":["/Users/ekaaprawira/Documents/github/IRK/passwordsgame/passwordGame/src/pages/Homepage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport passwordRules from '../rules';\nimport Rule from '../component/RuleUI';\nimport Typography from '@mui/material/Typography';\n\nexport default function TextBox() {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [gameOver, setGameOver] = useState(false);\n    const [rulesChecker, setRulesChecker] = useState(Array(20).fill(0));\n    const X = 10;\n    const [rulesComponents, setRulesComponents] = useState([]);\n    const countries = ['indonesia', 'united states', 'france', 'germany', 'japan', 'brazil', 'australia', 'russia', 'canada', 'italy'];\n    const captchas = ['captcha1', 'captcha2', 'captcha3', 'captcha4', 'captcha5', 'captcha6', 'captcha7'];\n    const captcha = captchas[0];\n    const handleSearch = (e) => {\n        const inputValue = e.target.value;\n        if (inputValue.toLowerCase().includes('cheat')) {\n            setSearchTerm(passwordRules.cheatPassword());\n        } else {\n            setSearchTerm(inputValue);\n        }\n    }\n    \n    const checkRules = (words) => {\n    const newRulesComponents = [];\n    let allPassed = true;\n    if (true) {\n        if (passwordRules.rule1(words)) {\n            rulesChecker[0] = 1;\n            newRulesComponents.push(<Rule index={1} text=\"Your password must be at least 5 characters.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={1} text=\"Your password must be at least 5 characters.\" passed={false} />);\n            allPassed = false;\n            \n        }\n    }\n\n    if (rulesChecker[0] == 1) {\n        if (passwordRules.rule2(words)) {\n             \n            rulesChecker[1] = 1;\n            newRulesComponents.push(<Rule index={2} text=\"Your password must include a number.\" passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={2} text=\"Your password must include a number.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[1] == 1) {\n        if (passwordRules.rule3(words)) {\n          \n            rulesChecker[2] = 1;\n            newRulesComponents.push(<Rule index={3} text=\"Your password must include an uppercase letter.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={3} text=\"Your password must include an uppercase letter.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[2] == 1) {\n        if (passwordRules.rule4(words)) {\n        \n            rulesChecker[3] = 1;\n            newRulesComponents.push(<Rule index={4} text=\"Your password must include a non-alphanumeric character.\" passed={true} />);\n        } else {\n            newRulesComponents.unshift(<Rule index={4} text=\"Your password must include a non-alphanumeric character.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[3] == 1) {\n        if (passwordRules.rule5(words, X)) {\n           \n            rulesChecker[4] = 1;\n            newRulesComponents.push(<Rule index={5} text={`Sum of digits must equal ${X}`} passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={5} text={`Sum of digits must equal ${X}`} passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[4] == 1) {\n        if (passwordRules.rule6(words)) {\n            \n            rulesChecker[5] = 1;\n            newRulesComponents.push(<Rule index={6} text=\"Your password must include a month name.\" passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={6} text=\"Your password must include a month name.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[5] == 1) {\n        if (passwordRules.rule7(words)) {\n            \n            rulesChecker[6] = 1;\n            newRulesComponents.push(<Rule index={7} text=\"Your password must include a Roman numeral.\" passed={true} />);\n        } else {\n        \n            newRulesComponents.unshift(<Rule index={7} text=\"Your password must include a Roman numeral.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[6] == 1) {\n        if (passwordRules.rule8(words, countries)) {\n            \n            rulesChecker[7] = 1;\n            newRulesComponents.push(<Rule index={8} text=\"Your password must include a country name.\" passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={8} text=\"Your password must include a country name.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[7] == 1) {\n        if (passwordRules.rule9(words, X)) {\n            \n            rulesChecker[8] = 1;\n            newRulesComponents.push(<Rule index={9} text={`Product of Roman numerals must equal ${X}`} passed={true} />);\n        } else {\n           \n            newRulesComponents.unshift(<Rule index={9} text={`Product of Roman numerals must equal ${X}`} passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[8] == 1) {\n        rulesChecker[9] = 1;\n        if (words.includes('ðŸ”¥')){\n            newRulesComponents.push(<Rule index={10} text={`Oh no! Your password is on fire ðŸ”¥. Quick, put it out!`} passed={false} />);\n        }\n        else{\n            newRulesComponents.unshift(<Rule index={10} text={`Oh no! Your password is on fire ðŸ”¥. Quick, put it out!`} passed={true} />);\n            allPassed = false;\n        }\n    }\n    if (rulesChecker[9] == 1) {\n        rulesChecker[10] = 1;\n        newRulesComponents.push(<Rule index={11} text=\"ðŸ¥š This is my chicken Paul. He hasnâ€™t hatched yet. Please put him in your password and keep him safe\" passed={true} />);\n        //allpased\n    }\n\n    if (rulesChecker[10] == 1) {\n        \n        if (passwordRules.rule12(words, captcha)) {\n            \n            rulesChecker[11] = 1;\n            newRulesComponents.push(<Rule index={12} text=\"Your password must include the captcha.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={12} text=\"Your password must include the captcha.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[11] == 1) {\n        if (passwordRules.rule13(words)) {\n            \n            rulesChecker[12] = 1;\n            newRulesComponents.push(<Rule index={13} text=\"Your password must include a leap year.\" passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={13} text=\"Your password must include a leap year.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[12] == 1) {\n        rulesChecker[13] = 1;\n        newRulesComponents.push(<Rule index={14} text=\"Password must satisfy rule 14\" passed={true} />);\n        //allpases\n    }\n\n    if (rulesChecker[13] == 1) {\n        const forbiddenLetters = [''];\n        if (passwordRules.rule15(words, forbiddenLetters)) {\n            \n            rulesChecker[14] = 1;\n            newRulesComponents.push(<Rule index={15} text=\"Your password must not contain forbidden letters.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={15} text=\"Your password must not contain forbidden letters.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[14] == 1) {\n        if (passwordRules.rule16(words)) {\n           \n            rulesChecker[15] = 1;\n            newRulesComponents.push(<Rule index={16} text=\"Your password must include IRK-related phrases.\" passed={true} />);\n        } else {\n           \n            newRulesComponents.unshift(<Rule index={16} text=\"Your password must include IRK-related phrases.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[15] == 1) {\n        const X17 = 20;\n        if (passwordRules.rule17(words, X17)) {\n\n            rulesChecker[16] = 1;\n            newRulesComponents.push(<Rule index={17} text={`Percentage of digits must be at least ${X17}%`} passed={true} />);\n        } else {\n           \n            newRulesComponents.unshift(<Rule index={17} text={`Percentage of digits must be at least ${X17}%`} passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[16] == 1) {\n        if (passwordRules.rule18(words)) {\n           \n            rulesChecker[17] = 1;\n            newRulesComponents.push(<Rule index={18} text=\"Your password must include the length of the text.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={18} text=\"Your password must include the length of the text.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[17] == 1) {\n        if (passwordRules.rule19(words)) {\n       \n            rulesChecker[18] = 1;\n            newRulesComponents.push(<Rule index={19} text=\"Your password's length must be a prime number.\" passed={true} />);\n        } else {\n            newRulesComponents.unshift(<Rule index={19} text=\"Your password's length must be a prime number.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[18] == 1) {\n        const currentTime = new Date();\n        if (passwordRules.rule20(words, currentTime)) {\n            \n            rulesChecker[19] = 1;\n            newRulesComponents.push(<Rule index={20} text=\"Your password must include the current time.\" passed={true} />);\n        } else {\n            newRulesComponents.unshift(<Rule index={20} text=\"Your password must include the current time.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n    if (rulesChecker[19]==1 && allPassed){\n        console.log(\"win\");\n    }\n\n    setRulesComponents(newRulesComponents);\n};\n\n    \n\n    useEffect(() => {\n        checkRules(searchTerm)\n        console.log(searchTerm)\n        console.log()\n    }, [searchTerm])\n    useEffect(() => {\n        if (rulesChecker[8] === 1) {\n          const intervalId = setInterval(() => {\n            setSearchTerm(passwordRules.rule10); \n          }, 5000);\n          return () => clearInterval(intervalId);\n        }\n      }, [rulesChecker, passwordRules.rule10,searchTerm]);\n\n      return (\n        <Box\n            component=\"form\"\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                paddingTop: '45px',\n                height: '100vh',\n                backgroundColor: '#fdf4e3', // Ganti warna background di sini\n                '& > :not(style)': { m: 1, width: '50%%' }, // Mengatur lebar TextField dan Rule components\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n            <Box\n                component=\"img\"\n                src=\"https://neal.fun/password-game/title.svg\"\n                alt=\"Title\"\n                sx={{\n                    width: '100%',\n                    maxWidth: '500px',\n                    marginBottom: '20px',\n                    paddingBottom:'60px',\n                    paddingTop :'60px',\n                }}\n            />\n            <Typography variant=\"h6\" gutterBottom sx={{ textAlign: 'left', marginTop: '20px' }}>\n            Please choose a password\n           </Typography>\n            <Box\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    width: '33%' // Mengatur lebar Box yang mengandung TextField dan Typography\n                }}\n            >\n                <TextField \n                    id=\"standard-basic\" \n                    variant=\"outlined\" \n                    value={searchTerm} \n                    onChange={handleSearch}\n                    sx={{\n                        borderRadius: '15px',\n                        backgroundColor: '#fff',\n                        '& .MuiOutlinedInput-root': {\n                            '& fieldset': {\n                                borderRadius: '15px',\n                                borderColor: 'black',\n                            },\n                        },\n                        width: '100%' // Mengatur lebar TextField\n                    }} \n                />\n                <Typography variant=\"body1\" sx={{ paddingLeft :1, }}>\n                    {searchTerm.length}\n                </Typography>\n            </Box>\n            {rulesComponents}\n        </Box>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}