{"ast":null,"code":"var _jsxFileName = \"/Users/ekaaprawira/Documents/github/IRK/passwordsgame/passwordGame/src/pages/Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport passwordRules from '../rules';\nimport Rule from '../component/RuleUI';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextBox() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [rulesChecker, setRulesChecker] = useState(Array(20).fill(0));\n  const [rulesComponents, setRulesComponents] = useState([]);\n  const [allPassed, setAllPassed] = useState(true);\n  const [startTime, setStartTime] = useState(null);\n  const intervalRef = useRef(null);\n  const X = 10;\n  const countries = ['indonesia', 'united states', 'france', 'germany', 'japan', 'brazil', 'australia', 'russia', 'canada', 'italy'];\n  const captchas = ['captcha1', 'captcha2', 'captcha3', 'captcha4', 'captcha5', 'captcha6', 'captcha7'];\n  const captcha = captchas[0];\n  const handleSearch = e => {\n    const inputValue = e.target.value;\n    if (inputValue.toLowerCase().includes('cheat')) {\n      setSearchTerm(passwordRules.cheatPassword());\n    } else {\n      setSearchTerm(inputValue);\n    }\n  };\n  const checkRules = words => {\n    const newRulesComponents = [];\n    let allPassed = true;\n    if (true) {\n      if (passwordRules.rule1(words)) {\n        rulesChecker[0] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 1,\n          text: \"Your password must be at least 5 characters.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 1,\n          text: \"Your password must be at least 5 characters.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[0] == 1) {\n      if (passwordRules.rule2(words)) {\n        rulesChecker[1] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 2,\n          text: \"Your password must include a number.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 2,\n          text: \"Your password must include a number.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[1] == 1) {\n      if (passwordRules.rule3(words)) {\n        rulesChecker[2] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 3,\n          text: \"Your password must include an uppercase letter.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 3,\n          text: \"Your password must include an uppercase letter.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[2] == 1) {\n      if (passwordRules.rule4(words)) {\n        rulesChecker[3] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 4,\n          text: \"Your password must include a non-alphanumeric character.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 4,\n          text: \"Your password must include a non-alphanumeric character.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[3] == 1) {\n      if (passwordRules.rule5(words, X)) {\n        rulesChecker[4] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 5,\n          text: `Sum of digits must equal ${X}`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 5,\n          text: `Sum of digits must equal ${X}`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[4] == 1) {\n      if (passwordRules.rule6(words)) {\n        rulesChecker[5] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 6,\n          text: \"Your password must include a month name.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 6,\n          text: \"Your password must include a month name.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[5] == 1) {\n      if (passwordRules.rule7(words)) {\n        rulesChecker[6] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 7,\n          text: \"Your password must include a Roman numeral.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 7,\n          text: \"Your password must include a Roman numeral.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[6] == 1) {\n      if (passwordRules.rule8(words, countries)) {\n        rulesChecker[7] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 8,\n          text: \"Your password must include a country name.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 8,\n          text: \"Your password must include a country name.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[7] == 1) {\n      if (passwordRules.rule9(words, X)) {\n        rulesChecker[8] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 9,\n          text: `Product of Roman numerals must equal ${X}`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 9,\n          text: `Product of Roman numerals must equal ${X}`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[8] == 1) {\n      rulesChecker[9] = 1;\n      if (words.includes('ðŸ”¥')) {\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 10,\n          text: `Oh no! Your password is on fire ðŸ”¥. Quick, put it out!`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 10,\n          text: `Oh no! Your password is on fire ðŸ”¥. Quick, put it out!`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[9] == 1) {\n      rulesChecker[10] = 1;\n      newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n        index: 11,\n        text: \"\\uD83E\\uDD5A This is my chicken Paul. He hasn\\u2019t hatched yet. Please put him in your password and keep him safe\",\n        passed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }, this));\n      //allpased\n    }\n    if (rulesChecker[10] == 1) {\n      if (passwordRules.rule12(words, captcha)) {\n        rulesChecker[11] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 12,\n          text: \"Your password must include this CAPTCHA.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 12,\n          text: \"Your password must include this CAPTCHA.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[11] == 1) {\n      if (passwordRules.rule13(words)) {\n        rulesChecker[12] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 13,\n          text: \"Your password must include a leap year.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 13,\n          text: \"Your password must include a leap year.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[12] == 1) {\n      rulesChecker[13] = 1;\n      newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n        index: 14,\n        text: \"Password must satisfy rule 14\",\n        passed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }, this));\n      //allpases\n    }\n    if (rulesChecker[13] == 1) {\n      const forbiddenLetters = [''];\n      if (passwordRules.rule15(words, forbiddenLetters)) {\n        rulesChecker[14] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 15,\n          text: \"Your password must not contain forbidden letters.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 15,\n          text: \"Your password must not contain forbidden letters.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[14] == 1) {\n      if (passwordRules.rule16(words)) {\n        rulesChecker[15] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 16,\n          text: \"Your password must include IRK-related phrases.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 16,\n          text: \"Your password must include IRK-related phrases.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[15] == 1) {\n      const X17 = 20;\n      if (passwordRules.rule17(words, X17)) {\n        rulesChecker[16] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 17,\n          text: `Percentage of digits must be at least ${X17}%`,\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 17,\n          text: `Percentage of digits must be at least ${X17}%`,\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[16] == 1) {\n      if (passwordRules.rule18(words)) {\n        rulesChecker[17] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 18,\n          text: \"Your password must include the length of the text.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 18,\n          text: \"Your password must include the length of the text.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[17] == 1) {\n      if (passwordRules.rule19(words)) {\n        rulesChecker[18] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 19,\n          text: \"Your password's length must be a prime number.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 19,\n          text: \"Your password's length must be a prime number.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[18] == 1) {\n      const currentTime = new Date();\n      if (passwordRules.rule20(words, currentTime)) {\n        rulesChecker[19] = 1;\n        newRulesComponents.push( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 20,\n          text: \"Your password must include the current time.\",\n          passed: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 37\n        }, this));\n      } else {\n        newRulesComponents.unshift( /*#__PURE__*/_jsxDEV(Rule, {\n          index: 20,\n          text: \"Your password must include the current time.\",\n          passed: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 40\n        }, this));\n        allPassed = false;\n      }\n    }\n    if (rulesChecker[19] == 1 && allPassed) {\n      console.log(\"win\");\n    }\n    setRulesComponents(newRulesComponents);\n    setAllPassed(allPassed);\n  };\n  useEffect(() => {\n    checkRules(searchTerm);\n    console.log(searchTerm);\n    console.log(allPassed);\n  }, [searchTerm]);\n  useEffect(() => {\n    if (rulesChecker[8] === 1 && startTime === null) {\n      // Set start time when rulesChecker[8] becomes 1\n      setStartTime(new Date().getTime());\n    }\n  }, [rulesChecker]);\n  useEffect(() => {\n    if (startTime !== null) {\n      // Clear previous interval if exists\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      intervalRef.current = setInterval(() => {\n        // Calculate elapsed time\n        const elapsed = new Date().getTime() - startTime;\n        if (elapsed % 5000 === 0) {\n          setSearchTerm(passwordRules.rule10);\n        }\n      }, 1000);\n      return () => clearInterval(intervalRef.current);\n    }\n  }, [startTime, passwordRules.rule10]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      paddingTop: '45px',\n      height: '100vh',\n      backgroundColor: '#fdf4e3',\n      // Ganti warna background di sini\n      '& > :not(style)': {\n        m: 1,\n        width: '50%%'\n      } // Mengatur lebar TextField dan Rule components\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"img\",\n      src: \"https://neal.fun/password-game/title.svg\",\n      alt: \"Title\",\n      sx: {\n        width: '100%',\n        maxWidth: '500px',\n        marginBottom: '20px',\n        paddingBottom: '60px',\n        paddingTop: '60px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        textAlign: 'left',\n        marginTop: '20px'\n      },\n      children: \"Please choose a password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '33%' // Mengatur lebar Box yang mengandung TextField dan Typography\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        variant: \"outlined\",\n        value: searchTerm,\n        onChange: handleSearch,\n        sx: {\n          borderRadius: '15px',\n          backgroundColor: '#fff',\n          '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n              borderRadius: '15px',\n              borderColor: 'black'\n            }\n          },\n          width: '100%' // Mengatur lebar TextField\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          paddingLeft: 1\n        },\n        children: searchTerm.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this), rulesComponents]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 9\n  }, this);\n}\n_s(TextBox, \"bbiFXcFmjOrwMH5a5wWSFXZDbjQ=\");\n_c = TextBox;\nvar _c;\n$RefreshReg$(_c, \"TextBox\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Box","TextField","passwordRules","Rule","Typography","jsxDEV","_jsxDEV","TextBox","_s","searchTerm","setSearchTerm","gameOver","setGameOver","rulesChecker","setRulesChecker","Array","fill","rulesComponents","setRulesComponents","allPassed","setAllPassed","startTime","setStartTime","intervalRef","X","countries","captchas","captcha","handleSearch","e","inputValue","target","value","toLowerCase","includes","cheatPassword","checkRules","words","newRulesComponents","rule1","push","index","text","passed","fileName","_jsxFileName","lineNumber","columnNumber","unshift","rule2","rule3","rule4","rule5","rule6","rule7","rule8","rule9","rule12","rule13","forbiddenLetters","rule15","rule16","X17","rule17","rule18","rule19","currentTime","Date","rule20","console","log","getTime","current","clearInterval","setInterval","elapsed","rule10","component","sx","display","flexDirection","alignItems","paddingTop","height","backgroundColor","m","width","noValidate","autoComplete","children","src","alt","maxWidth","marginBottom","paddingBottom","variant","gutterBottom","textAlign","marginTop","id","onChange","borderRadius","borderColor","paddingLeft","length","_c","$RefreshReg$"],"sources":["/Users/ekaaprawira/Documents/github/IRK/passwordsgame/passwordGame/src/pages/Homepage.js"],"sourcesContent":["import React, {useEffect, useState,useRef} from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport passwordRules from '../rules';\nimport Rule from '../component/RuleUI';\nimport Typography from '@mui/material/Typography';\n\nexport default function TextBox() {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [gameOver, setGameOver] = useState(false);\n    const [rulesChecker, setRulesChecker] = useState(Array(20).fill(0));\n    \n    const [rulesComponents, setRulesComponents] = useState([]);\n    const[allPassed,setAllPassed]=useState(true);\n    const[startTime,setStartTime]=useState(null);\n    const intervalRef = useRef(null);\n    const X = 10;\n    const countries = ['indonesia', 'united states', 'france', 'germany', 'japan', 'brazil', 'australia', 'russia', 'canada', 'italy'];\n    const captchas = ['captcha1', 'captcha2', 'captcha3', 'captcha4', 'captcha5', 'captcha6', 'captcha7'];\n    const captcha = captchas[0];\n\n\n    const handleSearch = (e) => {\n        const inputValue = e.target.value;\n        if (inputValue.toLowerCase().includes('cheat')) {\n            setSearchTerm(passwordRules.cheatPassword());\n        } else {\n            setSearchTerm(inputValue);\n        }\n    }\n    \n    const checkRules = (words) => {\n    const newRulesComponents = [];\n    let allPassed = true;\n    if (true) {\n        if (passwordRules.rule1(words)) {\n            rulesChecker[0] = 1;\n            newRulesComponents.push(<Rule index={1} text=\"Your password must be at least 5 characters.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={1} text=\"Your password must be at least 5 characters.\" passed={false} />);\n            allPassed = false;\n            \n        }\n    }\n\n    if (rulesChecker[0] == 1) {\n        if (passwordRules.rule2(words)) {\n             \n            rulesChecker[1] = 1;\n            newRulesComponents.push(<Rule index={2} text=\"Your password must include a number.\" passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={2} text=\"Your password must include a number.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[1] == 1) {\n        if (passwordRules.rule3(words)) {\n          \n            rulesChecker[2] = 1;\n            newRulesComponents.push(<Rule index={3} text=\"Your password must include an uppercase letter.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={3} text=\"Your password must include an uppercase letter.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[2] == 1) {\n        if (passwordRules.rule4(words)) {\n        \n            rulesChecker[3] = 1;\n            newRulesComponents.push(<Rule index={4} text=\"Your password must include a non-alphanumeric character.\" passed={true} />);\n        } else {\n            newRulesComponents.unshift(<Rule index={4} text=\"Your password must include a non-alphanumeric character.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[3] == 1) {\n        if (passwordRules.rule5(words, X)) {\n           \n            rulesChecker[4] = 1;\n            newRulesComponents.push(<Rule index={5} text={`Sum of digits must equal ${X}`} passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={5} text={`Sum of digits must equal ${X}`} passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[4] == 1) {\n        if (passwordRules.rule6(words)) {\n            \n            rulesChecker[5] = 1;\n            newRulesComponents.push(<Rule index={6} text=\"Your password must include a month name.\" passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={6} text=\"Your password must include a month name.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[5] == 1) {\n        if (passwordRules.rule7(words)) {\n            \n            rulesChecker[6] = 1;\n            newRulesComponents.push(<Rule index={7} text=\"Your password must include a Roman numeral.\" passed={true} />);\n        } else {\n        \n            newRulesComponents.unshift(<Rule index={7} text=\"Your password must include a Roman numeral.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[6] == 1) {\n        if (passwordRules.rule8(words, countries)) {\n            \n            rulesChecker[7] = 1;\n            newRulesComponents.push(<Rule index={8} text=\"Your password must include a country name.\" passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={8} text=\"Your password must include a country name.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[7] == 1) {\n        if (passwordRules.rule9(words, X)) {\n            \n            rulesChecker[8] = 1;\n            newRulesComponents.push(<Rule index={9} text={`Product of Roman numerals must equal ${X}`} passed={true} />);\n        } else {\n           \n            newRulesComponents.unshift(<Rule index={9} text={`Product of Roman numerals must equal ${X}`} passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[8] == 1) {\n        rulesChecker[9] = 1;\n        if (words.includes('ðŸ”¥')){\n            newRulesComponents.push(<Rule index={10} text={`Oh no! Your password is on fire ðŸ”¥. Quick, put it out!`} passed={false} />);\n        }\n        else{\n            newRulesComponents.unshift(<Rule index={10} text={`Oh no! Your password is on fire ðŸ”¥. Quick, put it out!`} passed={true} />);\n            allPassed = false;\n        }\n    }\n    if (rulesChecker[9] == 1) {\n        rulesChecker[10] = 1;\n        newRulesComponents.push(<Rule index={11} text=\"ðŸ¥š This is my chicken Paul. He hasnâ€™t hatched yet. Please put him in your password and keep him safe\" passed={true} />);\n        //allpased\n    }\n\n    if (rulesChecker[10] == 1) {\n        \n        if (passwordRules.rule12(words, captcha)) {\n            \n            rulesChecker[11] = 1;\n            newRulesComponents.push(<Rule index={12} text=\"Your password must include this CAPTCHA.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={12} text=\"Your password must include this CAPTCHA.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[11] == 1) {\n        if (passwordRules.rule13(words)) {\n            \n            rulesChecker[12] = 1;\n            newRulesComponents.push(<Rule index={13} text=\"Your password must include a leap year.\" passed={true} />);\n        } else {\n             \n            newRulesComponents.unshift(<Rule index={13} text=\"Your password must include a leap year.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[12] == 1) {\n        rulesChecker[13] = 1;\n        newRulesComponents.push(<Rule index={14} text=\"Password must satisfy rule 14\" passed={true} />);\n        //allpases\n    }\n\n    if (rulesChecker[13] == 1) {\n        const forbiddenLetters = [''];\n        if (passwordRules.rule15(words, forbiddenLetters)) {\n            \n            rulesChecker[14] = 1;\n            newRulesComponents.push(<Rule index={15} text=\"Your password must not contain forbidden letters.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={15} text=\"Your password must not contain forbidden letters.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[14] == 1) {\n        if (passwordRules.rule16(words)) {\n           \n            rulesChecker[15] = 1;\n            newRulesComponents.push(<Rule index={16} text=\"Your password must include IRK-related phrases.\" passed={true} />);\n        } else {\n           \n            newRulesComponents.unshift(<Rule index={16} text=\"Your password must include IRK-related phrases.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[15] == 1) {\n        const X17 = 20;\n        if (passwordRules.rule17(words, X17)) {\n\n            rulesChecker[16] = 1;\n            newRulesComponents.push(<Rule index={17} text={`Percentage of digits must be at least ${X17}%`} passed={true} />);\n        } else {\n           \n            newRulesComponents.unshift(<Rule index={17} text={`Percentage of digits must be at least ${X17}%`} passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[16] == 1) {\n        if (passwordRules.rule18(words)) {\n           \n            rulesChecker[17] = 1;\n            newRulesComponents.push(<Rule index={18} text=\"Your password must include the length of the text.\" passed={true} />);\n        } else {\n            \n            newRulesComponents.unshift(<Rule index={18} text=\"Your password must include the length of the text.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[17] == 1) {\n        if (passwordRules.rule19(words)) {\n       \n            rulesChecker[18] = 1;\n            newRulesComponents.push(<Rule index={19} text=\"Your password's length must be a prime number.\" passed={true} />);\n        } else {\n            newRulesComponents.unshift(<Rule index={19} text=\"Your password's length must be a prime number.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n\n    if (rulesChecker[18] == 1) {\n        const currentTime = new Date();\n        if (passwordRules.rule20(words, currentTime)) {\n            \n            rulesChecker[19] = 1;\n            newRulesComponents.push(<Rule index={20} text=\"Your password must include the current time.\" passed={true} />);\n        } else {\n            newRulesComponents.unshift(<Rule index={20} text=\"Your password must include the current time.\" passed={false} />);\n            allPassed = false;\n        }\n    }\n    if (rulesChecker[19]==1 && allPassed){\n        console.log(\"win\");\n    }\n\n    setRulesComponents(newRulesComponents);\n    setAllPassed(allPassed);\n};\n\n    \n\n    useEffect(() => {\n        checkRules(searchTerm)\n        console.log(searchTerm)\n        console.log(allPassed)\n    }, [searchTerm])\n\n    useEffect(() => {\n    if (rulesChecker[8] === 1 && startTime === null) {\n      // Set start time when rulesChecker[8] becomes 1\n      setStartTime(new Date().getTime());\n    }\n  }, [rulesChecker]);\n\n  useEffect(() => {\n    if (startTime !== null) {\n      // Clear previous interval if exists\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n\n      intervalRef.current = setInterval(() => {\n        // Calculate elapsed time\n        const elapsed = new Date().getTime() - startTime;\n\n        if (elapsed % 5000 === 0) { \n          setSearchTerm(passwordRules.rule10);\n        }\n      }, 1000);\n      return () => clearInterval(intervalRef.current);\n    }\n  }, [startTime, passwordRules.rule10]);\n\n\n      return (\n        <Box\n            component=\"form\"\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                paddingTop: '45px',\n                height: '100vh',\n                backgroundColor: '#fdf4e3', // Ganti warna background di sini\n                '& > :not(style)': { m: 1, width: '50%%' }, // Mengatur lebar TextField dan Rule components\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n            <Box\n                component=\"img\"\n                src=\"https://neal.fun/password-game/title.svg\"\n                alt=\"Title\"\n                sx={{\n                    width: '100%',\n                    maxWidth: '500px',\n                    marginBottom: '20px',\n                    paddingBottom:'60px',\n                    paddingTop :'60px',\n                }}\n            />\n            <Typography variant=\"h6\" gutterBottom sx={{ textAlign: 'left', marginTop: '20px' }}>\n            Please choose a password\n           </Typography>\n            <Box\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    width: '33%' // Mengatur lebar Box yang mengandung TextField dan Typography\n                }}\n            >\n                <TextField \n                    id=\"standard-basic\" \n                    variant=\"outlined\" \n                    value={searchTerm} \n                    onChange={handleSearch}\n                    sx={{\n                        borderRadius: '15px',\n                        backgroundColor: '#fff',\n                        '& .MuiOutlinedInput-root': {\n                            '& fieldset': {\n                                borderRadius: '15px',\n                                borderColor: 'black',\n                            },\n                        },\n                        width: '100%' // Mengatur lebar TextField\n                    }} \n                />\n                <Typography variant=\"body1\" sx={{ paddingLeft :1, }}>\n                    {searchTerm.length}\n                </Typography>\n            </Box>\n            {rulesComponents}\n        </Box>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}