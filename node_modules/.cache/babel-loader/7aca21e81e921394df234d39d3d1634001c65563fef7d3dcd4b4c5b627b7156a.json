{"ast":null,"code":"var _jsxFileName = \"/Users/ekaaprawira/Documents/github/IRK/passwordsgame/src/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport default function FreeSoloCreateOption() {\n  _s();\n  const [value, setValue] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      if (typeof newValue === 'string') {\n        setValue({\n          title: newValue\n        });\n      } else if (newValue && newValue.inputValue) {\n        // Create a new value from the user input\n        setValue({\n          title: newValue.inputValue\n        });\n      } else {\n        setValue(newValue);\n      }\n    },\n    filterOptions: (options, params) => {\n      const filtered = filter(options, params);\n      const {\n        inputValue\n      } = params;\n      // Suggest the creation of a new value\n      const isExisting = options.some(option => inputValue === option.title);\n      if (inputValue !== '' && !isExisting) {\n        filtered.push({\n          inputValue,\n          title: `Add \"${inputValue}\"`\n        });\n      }\n      return filtered;\n    },\n    selectOnFocus: true,\n    clearOnBlur: true,\n    handleHomeEndKeys: true,\n    id: \"free-solo-with-text-demo\",\n    options: top100Films,\n    getOptionLabel: option => {\n      // Value selected with enter, right from the input\n      if (typeof option === 'string') {\n        return option;\n      }\n      // Add \"xxx\" option created dynamically\n      if (option.inputValue) {\n        return option.inputValue;\n      }\n      // Regular option\n      return option.title;\n    },\n    renderOption: (props, option) => {\n      const {\n        key,\n        ...optionProps\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        ...optionProps,\n        children: option.title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this);\n    },\n    sx: {\n      width: 300\n    },\n    freeSolo: true,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Free solo with text demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(FreeSoloCreateOption, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n_c = FreeSoloCreateOption;\nvar _c;\n$RefreshReg$(_c, \"FreeSoloCreateOption\");","map":{"version":3,"names":["React","TextField","Autocomplete","createFilterOptions","jsxDEV","_jsxDEV","filter","FreeSoloCreateOption","_s","value","setValue","useState","onChange","event","newValue","title","inputValue","filterOptions","options","params","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","id","top100Films","getOptionLabel","renderOption","props","key","optionProps","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","freeSolo","renderInput","label","_c","$RefreshReg$"],"sources":["/Users/ekaaprawira/Documents/github/IRK/passwordsgame/src/pages/Profile.js"],"sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\nconst filter = createFilterOptions();\n\nexport default function FreeSoloCreateOption() {\n  const [value, setValue] = React.useState(null);\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        if (typeof newValue === 'string') {\n          setValue({\n            title: newValue,\n          });\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            title: newValue.inputValue,\n          });\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some((option) => inputValue === option.title);\n        if (inputValue !== '' && !isExisting) {\n          filtered.push({\n            inputValue,\n            title: `Add \"${inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={top100Films}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.title;\n      }}\n      renderOption={(props, option) => {\n        const { key, ...optionProps } = props;\n        return (\n          <li key={key} {...optionProps}>\n            {option.title}\n          </li>\n        );\n      }}\n      sx={{ width: 300 }}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label=\"Free solo with text demo\" />\n      )}\n    />\n  );\n}\n\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,IAAIC,mBAAmB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,MAAM,GAAGH,mBAAmB,CAAC,CAAC;AAEpC,eAAe,SAASI,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;EAE9C,oBACEN,OAAA,CAACH,YAAY;IACXO,KAAK,EAAEA,KAAM;IACbG,QAAQ,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;MAC7B,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;QAChCJ,QAAQ,CAAC;UACPK,KAAK,EAAED;QACT,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIA,QAAQ,IAAIA,QAAQ,CAACE,UAAU,EAAE;QAC1C;QACAN,QAAQ,CAAC;UACPK,KAAK,EAAED,QAAQ,CAACE;QAClB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,QAAQ,CAACI,QAAQ,CAAC;MACpB;IACF,CAAE;IACFG,aAAa,EAAEA,CAACC,OAAO,EAAEC,MAAM,KAAK;MAClC,MAAMC,QAAQ,GAAGd,MAAM,CAACY,OAAO,EAAEC,MAAM,CAAC;MAExC,MAAM;QAAEH;MAAW,CAAC,GAAGG,MAAM;MAC7B;MACA,MAAME,UAAU,GAAGH,OAAO,CAACI,IAAI,CAAEC,MAAM,IAAKP,UAAU,KAAKO,MAAM,CAACR,KAAK,CAAC;MACxE,IAAIC,UAAU,KAAK,EAAE,IAAI,CAACK,UAAU,EAAE;QACpCD,QAAQ,CAACI,IAAI,CAAC;UACZR,UAAU;UACVD,KAAK,EAAE,QAAQC,UAAU;QAC3B,CAAC,CAAC;MACJ;MAEA,OAAOI,QAAQ;IACjB,CAAE;IACFK,aAAa;IACbC,WAAW;IACXC,iBAAiB;IACjBC,EAAE,EAAC,0BAA0B;IAC7BV,OAAO,EAAEW,WAAY;IACrBC,cAAc,EAAGP,MAAM,IAAK;MAC1B;MACA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;QAC9B,OAAOA,MAAM;MACf;MACA;MACA,IAAIA,MAAM,CAACP,UAAU,EAAE;QACrB,OAAOO,MAAM,CAACP,UAAU;MAC1B;MACA;MACA,OAAOO,MAAM,CAACR,KAAK;IACrB,CAAE;IACFgB,YAAY,EAAEA,CAACC,KAAK,EAAET,MAAM,KAAK;MAC/B,MAAM;QAAEU,GAAG;QAAE,GAAGC;MAAY,CAAC,GAAGF,KAAK;MACrC,oBACE3B,OAAA;QAAA,GAAkB6B,WAAW;QAAAC,QAAA,EAC1BZ,MAAM,CAACR;MAAK,GADNkB,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CAAC;IAET,CAAE;IACFC,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAI,CAAE;IACnBC,QAAQ;IACRC,WAAW,EAAGxB,MAAM,iBAClBd,OAAA,CAACJ,SAAS;MAAA,GAAKkB,MAAM;MAAEyB,KAAK,EAAC;IAA0B;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAAC/B,EAAA,CAnEuBD,oBAAoB;AAAAsC,EAAA,GAApBtC,oBAAoB;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}