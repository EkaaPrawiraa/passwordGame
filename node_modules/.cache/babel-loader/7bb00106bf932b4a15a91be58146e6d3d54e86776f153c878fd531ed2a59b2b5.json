{"ast":null,"code":"const moment = require('moment');\nfunction isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nfunction isPrime(n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 === 0 || n % 3 === 0) return false;\n  for (let i = 5; i * i <= n; i += 6) {\n    if (n % i === 0 || n % (i + 2) === 0) return false;\n  }\n  return true;\n}\nfunction rule1(text) {\n  return text.length > 5;\n}\nfunction rule2(text) {\n  return /\\d/.test(text);\n}\nfunction rule3(text) {\n  return /[A-Z]/.test(text);\n}\nfunction rule4(text) {\n  return /[^a-zA-Z0-9]/.test(text);\n}\nfunction rule5(text, X) {\n  const matches = text.match(/\\d/g);\n  if (!matches) return false;\n  const sum = matches.reduce((acc, digit) => acc + parseInt(digit, 10), 0);\n  return sum === X;\n}\nfunction rule6(text) {\n  return /(january|february|march|april|may|june|july|august|september|october|november|december)/i.test(text);\n}\nfunction rule7(text) {\n  return /[IVXLCDM]+/i.test(text);\n}\nfunction rule8(text, countries) {\n  return new RegExp(`(${countries.join('|')})`, 'i').test(text);\n}\nfunction romanToInt(roman) {\n  const romanNumerals = {\n    'I': 1,\n    'V': 5,\n    'X': 10,\n    'L': 50,\n    'C': 100,\n    'D': 500,\n    'M': 1000\n  };\n  return roman.split('').reduce((total, char) => total + (romanNumerals[char] || 0), 0);\n}\nfunction rule9(text, X) {\n  const matches = text.match(/[IVXLCDM]+/g);\n  if (!matches) return false;\n  const values = matches.map(match => romanToInt(match));\n  const product = values.reduce((acc, value) => acc * value, 1);\n  console.log('Produk dari angka Romawi:', product);\n  return product === X;\n}\nfunction rule10(text) {\n  if (text.length === 0) return text;\n  if (text.includes('üî•')) {\n    return text.slice(0, -2) + 'üî•';\n  } else {\n    return text.slice(0, -1) + 'üî•';\n  }\n}\nfunction rule11(text, X) {\n  setInterval(() => {\n    if (!text.includes('ü•ö')) {\n      console.log('Rule 11 failed: Emoji ü•ö is missing!');\n      console.log('YOU LOSE!');\n      process.exit(1);\n    }\n  }, X);\n  return true;\n}\nfunction rule12(text, captcha) {\n  return text.includes(captcha);\n}\nfunction rule13(text) {\n  const matches = text.match(/\\d{4}/g);\n  if (!matches) return false;\n  return matches.some(year => isLeapYear(parseInt(year, 10)));\n}\nfunction rule14(text, X, Y) {\n  text = text.replace('ü•ö', 'üêî');\n  setInterval(() => {\n    const countWorms = (text.match(/üêõ/g) || []).length;\n    if (countWorms < Y) {\n      console.log('Rule 14 failed: Chicken üêî needs more worms üêõ!');\n      process.exit(1);\n    }\n  }, X);\n  return true;\n}\nfunction rule15(text, forbiddenLetters) {\n  const pattern = new RegExp(`[${forbiddenLetters.join('')}]`, 'i');\n  return !pattern.test(text);\n}\nfunction rule16(text) {\n  return text.includes('I want IRK') || text.includes('I need IRK') || text.includes('I love IRK');\n}\nfunction rule17(text, X) {\n  const numDigits = (text.match(/\\d/g) || []).length;\n  const totalChars = text.length;\n  if (totalChars === 0) return false;\n  const percentageDigits = numDigits * 100 / totalChars;\n  return percentageDigits >= X;\n}\nfunction rule18(text) {\n  const lengthStr = text.length.toString();\n  return text.includes(lengthStr);\n}\nfunction rule19(text) {\n  return isPrime(text.length);\n}\nfunction rule20(text, currentTime) {\n  const currentTimeString = moment(currentTime).format('HH:mm');\n  return text.includes(currentTimeString);\n}\nconst cheatPassword = () => {\n  //belum beres\n  const X = 10;\n  const forbiddenLetters = ['a', 'e', 'i', 'o', 'u'];\n  const X17 = 20;\n  const currentTime = new Date();\n  const captcha = passwordRules.captchas[0];\n  let words = \"A1!JulyIVUSA\";\n  words += \"9991\";\n  words += \"2020\";\n  words += \"I need IRK\";\n  words += \"333333333\";\n  words += (words.length + 16).toString();\n  words += \"1234\";\n  const currentTimeString = moment(currentTime).format('HH:mm');\n  words += currentTimeString;\n  words += passwordRules.countries[0];\n  words += captcha;\n  return words;\n};\nconst passwordRules = {\n  rule1,\n  rule2,\n  rule3,\n  rule4,\n  rule5,\n  rule6,\n  rule7,\n  rule8,\n  rule9,\n  rule10,\n  rule11,\n  rule12,\n  rule13,\n  rule14,\n  rule15,\n  rule16,\n  rule17,\n  rule18,\n  rule19,\n  rule20,\n  romanToInt,\n  isLeapYear,\n  isPrime,\n  countries,\n  captchas,\n  cheatPassword\n};\nexport default passwordRules;","map":{"version":3,"names":["moment","require","isLeapYear","year","isPrime","n","i","rule1","text","length","rule2","test","rule3","rule4","rule5","X","matches","match","sum","reduce","acc","digit","parseInt","rule6","rule7","rule8","countries","RegExp","join","romanToInt","roman","romanNumerals","split","total","char","rule9","values","map","product","value","console","log","rule10","includes","slice","rule11","setInterval","process","exit","rule12","captcha","rule13","some","rule14","Y","replace","countWorms","rule15","forbiddenLetters","pattern","rule16","rule17","numDigits","totalChars","percentageDigits","rule18","lengthStr","toString","rule19","rule20","currentTime","currentTimeString","format","cheatPassword","X17","Date","passwordRules","captchas","words"],"sources":["/Users/ekaaprawira/Documents/github/IRK/passwordsgame/passwordGame/src/rules.js"],"sourcesContent":["\nconst moment = require('moment');\n\n\n\n\n\n\nfunction isLeapYear(year) {\n  return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\n}\n\nfunction isPrime(n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 === 0 || n % 3 === 0) return false;\n  for (let i = 5; i * i <= n; i += 6) {\n    if (n % i === 0 || n % (i + 2) === 0) return false;\n  }\n  return true;\n}\n\nfunction rule1(text) {\n  return text.length > 5;\n}\n\nfunction rule2(text) {\n  return /\\d/.test(text);\n}\n\nfunction rule3(text) {\n  return /[A-Z]/.test(text);\n}\n\nfunction rule4(text) {\n  return /[^a-zA-Z0-9]/.test(text);\n}\n\nfunction rule5(text, X) {\n  const matches = text.match(/\\d/g);\n  if (!matches) return false;\n  const sum = matches.reduce((acc, digit) => acc + parseInt(digit, 10), 0);\n  return sum === X;\n}\n\nfunction rule6(text) {\n  return /(january|february|march|april|may|june|july|august|september|october|november|december)/i.test(text);\n}\n\nfunction rule7(text) {\n  return /[IVXLCDM]+/i.test(text);\n}\n\n\nfunction rule8(text, countries) {\n  return new RegExp(`(${countries.join('|')})`, 'i').test(text);\n}\n\nfunction romanToInt(roman) {\n  const romanNumerals = {\n    'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000\n  };\n  return roman.split('').reduce((total, char) => total + (romanNumerals[char] || 0), 0);\n}\n\nfunction rule9(text, X) {\n  const matches = text.match(/[IVXLCDM]+/g);\n  if (!matches) return false;\n\n  const values = matches.map(match => romanToInt(match));\n  \n  const product = values.reduce((acc, value) => acc * value, 1);\n  \n  console.log('Produk dari angka Romawi:', product);\n  \n  return product === X;\n}\n\nfunction rule10(text) {\n  if (text.length === 0) return text;\n  if (text.includes('üî•')) {\n    return text.slice(0, -2) + 'üî•'; \n  } else {\n    return text.slice(0, -1) + 'üî•'; \n  }\n}\n\nfunction rule11(text, X) {\n  setInterval(() => {\n    if (!text.includes('ü•ö')) {\n      console.log('Rule 11 failed: Emoji ü•ö is missing!');\n      console.log('YOU LOSE!');\n      process.exit(1);\n    }\n  }, X);\n  return true;\n}\n\nfunction rule12(text, captcha) {\n  return text.includes(captcha);\n}\n\nfunction rule13(text) {\n  const matches = text.match(/\\d{4}/g);\n  if (!matches) return false;\n  return matches.some(year => isLeapYear(parseInt(year, 10)));\n}\n\nfunction rule14(text, X, Y) {\n  text = text.replace('ü•ö', 'üêî');\n  setInterval(() => {\n    const countWorms = (text.match(/üêõ/g) || []).length;\n    if (countWorms < Y) {\n      console.log('Rule 14 failed: Chicken üêî needs more worms üêõ!');\n      process.exit(1);\n    }\n  }, X);\n  return true;\n}\n\nfunction rule15(text, forbiddenLetters) {\n  const pattern = new RegExp(`[${forbiddenLetters.join('')}]`, 'i');\n  return !pattern.test(text);\n}\n\nfunction rule16(text) {\n  return text.includes('I want IRK') || text.includes('I need IRK') || text.includes('I love IRK');\n}\n\nfunction rule17(text, X) {\n  const numDigits = (text.match(/\\d/g) || []).length;\n  const totalChars = text.length;\n  if (totalChars === 0) return false;\n  const percentageDigits = (numDigits * 100) / totalChars;\n  return percentageDigits >= X;\n}\n\nfunction rule18(text) {\n  const lengthStr = text.length.toString();\n  return text.includes(lengthStr);\n}\n\nfunction rule19(text) {\n  return isPrime(text.length);\n}\n\nfunction rule20(text, currentTime) {\n  const currentTimeString = moment(currentTime).format('HH:mm');\n  return text.includes(currentTimeString);\n}\nconst cheatPassword = () => { //belum beres\n  const X = 10;\n  const forbiddenLetters = ['a', 'e', 'i', 'o', 'u'];\n  const X17 = 20;\n  const currentTime = new Date();\n  const captcha = passwordRules.captchas[0];\n\n  let words = \"A1!JulyIVUSA\";\n  words += \"9991\";\n  words += \"2020\";\n  words += \"I need IRK\";\n  words += \"333333333\";\n  words += (words.length + 16).toString();\n  words += \"1234\";\n  const currentTimeString = moment(currentTime).format('HH:mm');\n  words += currentTimeString;\n  words += passwordRules.countries[0];\n  words += captcha;\n\n  return words;\n}\n\nconst passwordRules = {\n  rule1,\n  rule2,\n  rule3,\n  rule4,\n  rule5,\n  rule6,\n  rule7,\n  rule8,\n  rule9,\n  rule10,\n  rule11,\n  rule12,\n  rule13,\n  rule14,\n  rule15,\n  rule16,\n  rule17,\n  rule18,\n  rule19,\n  rule20,\n  romanToInt,\n  isLeapYear,\n  isPrime,\n  countries,\n  captchas,\n  cheatPassword,\n};\nexport default passwordRules;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}